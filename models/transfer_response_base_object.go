package models

import (
    i336074805fc853987abe6f7fe3ad97a6a6f3077a16391fec744f671a015fbd7e "time"
    i561e97a8befe7661a44c8f54600992b4207a3a0cf6770e5559949bc276de2e22 "github.com/google/uuid"
    i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91 "github.com/microsoft/kiota-abstractions-go/serialization"
)

type TransferResponseBaseObject struct {
    // Banks can display additional information to help the end user understand why they received funds. This information will appear on both the source and destination bank account statements. The field supports 10 alphanumeric characters for ACH and 140 for RTP.
    account_statement_descriptor *string
    // Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
    additionalData map[string]any
    // Transfer amount in integral cents (example: 100 = $1). Must be greater than zero.
    amount *int32
    // Timestamp when the resource was created.
    created_at *i336074805fc853987abe6f7fe3ad97a6a6f3077a16391fec744f671a015fbd7e.Time
    // Currency code in ISO 4217 format. Only USD is supported.
    currency *TransferCurrency
    // Information about the transfer funds destination, which will be credited.
    destination DestinationTransferPartyResponseable
    // Estimated date that funds will arrive in destination account. Time will always be midnight and should be ignored.
    estimated_funds_delivery_date *i336074805fc853987abe6f7fe3ad97a6a6f3077a16391fec744f671a015fbd7e.Time
    // Orum generated unique id for the resource.
    id *i561e97a8befe7661a44c8f54600992b4207a3a0cf6770e5559949bc276de2e22.UUID
    // Additional data you would like to provide on the resource. The field supports valid JSON of up to 5 key-value pairs with a maximum of 20 characters for the key and 50 characters for the value. Do not include any sensitive information.
    metadata Metadataable
    // For use cases that require a Source, information about the transfer funding source, which will be debited.
    source SourceTransferPartyResponseable
    // Speed of transfer.
    speed *TransferSpeed
    // Describes the current status of the transfer.
    status *TransferStatus
    // Array that explains why the transfer failed.
    status_reasons []TransferStatusReasonable
    // Orum generated unique id for the resource.
    transfer_group_id *i561e97a8befe7661a44c8f54600992b4207a3a0cf6770e5559949bc276de2e22.UUID
    // Unique reference id for the transfer. Generated by you.
    transfer_reference_id *string
    // Timestamp when the resource was last updated.
    updated_at *i336074805fc853987abe6f7fe3ad97a6a6f3077a16391fec744f671a015fbd7e.Time
}
// NewTransferResponseBaseObject instantiates a new TransferResponseBaseObject and sets the default values.
func NewTransferResponseBaseObject()(*TransferResponseBaseObject) {
    m := &TransferResponseBaseObject{
    }
    m.SetAdditionalData(make(map[string]any))
    return m
}
// CreateTransferResponseBaseObjectFromDiscriminatorValue creates a new instance of the appropriate class based on discriminator value
// returns a Parsable when successful
func CreateTransferResponseBaseObjectFromDiscriminatorValue(parseNode i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.ParseNode)(i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.Parsable, error) {
    return NewTransferResponseBaseObject(), nil
}
// GetAccountStatementDescriptor gets the account_statement_descriptor property value. Banks can display additional information to help the end user understand why they received funds. This information will appear on both the source and destination bank account statements. The field supports 10 alphanumeric characters for ACH and 140 for RTP.
// returns a *string when successful
func (m *TransferResponseBaseObject) GetAccountStatementDescriptor()(*string) {
    return m.account_statement_descriptor
}
// GetAdditionalData gets the AdditionalData property value. Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
// returns a map[string]any when successful
func (m *TransferResponseBaseObject) GetAdditionalData()(map[string]any) {
    return m.additionalData
}
// GetAmount gets the amount property value. Transfer amount in integral cents (example: 100 = $1). Must be greater than zero.
// returns a *int32 when successful
func (m *TransferResponseBaseObject) GetAmount()(*int32) {
    return m.amount
}
// GetCreatedAt gets the created_at property value. Timestamp when the resource was created.
// returns a *Time when successful
func (m *TransferResponseBaseObject) GetCreatedAt()(*i336074805fc853987abe6f7fe3ad97a6a6f3077a16391fec744f671a015fbd7e.Time) {
    return m.created_at
}
// GetCurrency gets the currency property value. Currency code in ISO 4217 format. Only USD is supported.
// returns a *TransferCurrency when successful
func (m *TransferResponseBaseObject) GetCurrency()(*TransferCurrency) {
    return m.currency
}
// GetDestination gets the destination property value. Information about the transfer funds destination, which will be credited.
// returns a DestinationTransferPartyResponseable when successful
func (m *TransferResponseBaseObject) GetDestination()(DestinationTransferPartyResponseable) {
    return m.destination
}
// GetEstimatedFundsDeliveryDate gets the estimated_funds_delivery_date property value. Estimated date that funds will arrive in destination account. Time will always be midnight and should be ignored.
// returns a *Time when successful
func (m *TransferResponseBaseObject) GetEstimatedFundsDeliveryDate()(*i336074805fc853987abe6f7fe3ad97a6a6f3077a16391fec744f671a015fbd7e.Time) {
    return m.estimated_funds_delivery_date
}
// GetFieldDeserializers the deserialization information for the current model
// returns a map[string]func(i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.ParseNode)(error) when successful
func (m *TransferResponseBaseObject) GetFieldDeserializers()(map[string]func(i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.ParseNode)(error)) {
    res := make(map[string]func(i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.ParseNode)(error))
    res["account_statement_descriptor"] = func (n i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.ParseNode) error {
        val, err := n.GetStringValue()
        if err != nil {
            return err
        }
        if val != nil {
            m.SetAccountStatementDescriptor(val)
        }
        return nil
    }
    res["amount"] = func (n i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.ParseNode) error {
        val, err := n.GetInt32Value()
        if err != nil {
            return err
        }
        if val != nil {
            m.SetAmount(val)
        }
        return nil
    }
    res["created_at"] = func (n i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.ParseNode) error {
        val, err := n.GetTimeValue()
        if err != nil {
            return err
        }
        if val != nil {
            m.SetCreatedAt(val)
        }
        return nil
    }
    res["currency"] = func (n i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.ParseNode) error {
        val, err := n.GetEnumValue(ParseTransferCurrency)
        if err != nil {
            return err
        }
        if val != nil {
            m.SetCurrency(val.(*TransferCurrency))
        }
        return nil
    }
    res["destination"] = func (n i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.ParseNode) error {
        val, err := n.GetObjectValue(CreateDestinationTransferPartyResponseFromDiscriminatorValue)
        if err != nil {
            return err
        }
        if val != nil {
            m.SetDestination(val.(DestinationTransferPartyResponseable))
        }
        return nil
    }
    res["estimated_funds_delivery_date"] = func (n i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.ParseNode) error {
        val, err := n.GetTimeValue()
        if err != nil {
            return err
        }
        if val != nil {
            m.SetEstimatedFundsDeliveryDate(val)
        }
        return nil
    }
    res["id"] = func (n i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.ParseNode) error {
        val, err := n.GetUUIDValue()
        if err != nil {
            return err
        }
        if val != nil {
            m.SetId(val)
        }
        return nil
    }
    res["metadata"] = func (n i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.ParseNode) error {
        val, err := n.GetObjectValue(CreateMetadataFromDiscriminatorValue)
        if err != nil {
            return err
        }
        if val != nil {
            m.SetMetadata(val.(Metadataable))
        }
        return nil
    }
    res["source"] = func (n i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.ParseNode) error {
        val, err := n.GetObjectValue(CreateSourceTransferPartyResponseFromDiscriminatorValue)
        if err != nil {
            return err
        }
        if val != nil {
            m.SetSource(val.(SourceTransferPartyResponseable))
        }
        return nil
    }
    res["speed"] = func (n i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.ParseNode) error {
        val, err := n.GetEnumValue(ParseTransferSpeed)
        if err != nil {
            return err
        }
        if val != nil {
            m.SetSpeed(val.(*TransferSpeed))
        }
        return nil
    }
    res["status"] = func (n i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.ParseNode) error {
        val, err := n.GetEnumValue(ParseTransferStatus)
        if err != nil {
            return err
        }
        if val != nil {
            m.SetStatus(val.(*TransferStatus))
        }
        return nil
    }
    res["status_reasons"] = func (n i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.ParseNode) error {
        val, err := n.GetCollectionOfObjectValues(CreateTransferStatusReasonFromDiscriminatorValue)
        if err != nil {
            return err
        }
        if val != nil {
            res := make([]TransferStatusReasonable, len(val))
            for i, v := range val {
                if v != nil {
                    res[i] = v.(TransferStatusReasonable)
                }
            }
            m.SetStatusReasons(res)
        }
        return nil
    }
    res["transfer_group_id"] = func (n i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.ParseNode) error {
        val, err := n.GetUUIDValue()
        if err != nil {
            return err
        }
        if val != nil {
            m.SetTransferGroupId(val)
        }
        return nil
    }
    res["transfer_reference_id"] = func (n i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.ParseNode) error {
        val, err := n.GetStringValue()
        if err != nil {
            return err
        }
        if val != nil {
            m.SetTransferReferenceId(val)
        }
        return nil
    }
    res["updated_at"] = func (n i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.ParseNode) error {
        val, err := n.GetTimeValue()
        if err != nil {
            return err
        }
        if val != nil {
            m.SetUpdatedAt(val)
        }
        return nil
    }
    return res
}
// GetId gets the id property value. Orum generated unique id for the resource.
// returns a *UUID when successful
func (m *TransferResponseBaseObject) GetId()(*i561e97a8befe7661a44c8f54600992b4207a3a0cf6770e5559949bc276de2e22.UUID) {
    return m.id
}
// GetMetadata gets the metadata property value. Additional data you would like to provide on the resource. The field supports valid JSON of up to 5 key-value pairs with a maximum of 20 characters for the key and 50 characters for the value. Do not include any sensitive information.
// returns a Metadataable when successful
func (m *TransferResponseBaseObject) GetMetadata()(Metadataable) {
    return m.metadata
}
// GetSource gets the source property value. For use cases that require a Source, information about the transfer funding source, which will be debited.
// returns a SourceTransferPartyResponseable when successful
func (m *TransferResponseBaseObject) GetSource()(SourceTransferPartyResponseable) {
    return m.source
}
// GetSpeed gets the speed property value. Speed of transfer.
// returns a *TransferSpeed when successful
func (m *TransferResponseBaseObject) GetSpeed()(*TransferSpeed) {
    return m.speed
}
// GetStatus gets the status property value. Describes the current status of the transfer.
// returns a *TransferStatus when successful
func (m *TransferResponseBaseObject) GetStatus()(*TransferStatus) {
    return m.status
}
// GetStatusReasons gets the status_reasons property value. Array that explains why the transfer failed.
// returns a []TransferStatusReasonable when successful
func (m *TransferResponseBaseObject) GetStatusReasons()([]TransferStatusReasonable) {
    return m.status_reasons
}
// GetTransferGroupId gets the transfer_group_id property value. Orum generated unique id for the resource.
// returns a *UUID when successful
func (m *TransferResponseBaseObject) GetTransferGroupId()(*i561e97a8befe7661a44c8f54600992b4207a3a0cf6770e5559949bc276de2e22.UUID) {
    return m.transfer_group_id
}
// GetTransferReferenceId gets the transfer_reference_id property value. Unique reference id for the transfer. Generated by you.
// returns a *string when successful
func (m *TransferResponseBaseObject) GetTransferReferenceId()(*string) {
    return m.transfer_reference_id
}
// GetUpdatedAt gets the updated_at property value. Timestamp when the resource was last updated.
// returns a *Time when successful
func (m *TransferResponseBaseObject) GetUpdatedAt()(*i336074805fc853987abe6f7fe3ad97a6a6f3077a16391fec744f671a015fbd7e.Time) {
    return m.updated_at
}
// Serialize serializes information the current object
func (m *TransferResponseBaseObject) Serialize(writer i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.SerializationWriter)(error) {
    {
        err := writer.WriteStringValue("account_statement_descriptor", m.GetAccountStatementDescriptor())
        if err != nil {
            return err
        }
    }
    {
        err := writer.WriteInt32Value("amount", m.GetAmount())
        if err != nil {
            return err
        }
    }
    {
        err := writer.WriteTimeValue("created_at", m.GetCreatedAt())
        if err != nil {
            return err
        }
    }
    if m.GetCurrency() != nil {
        cast := (*m.GetCurrency()).String()
        err := writer.WriteStringValue("currency", &cast)
        if err != nil {
            return err
        }
    }
    {
        err := writer.WriteObjectValue("destination", m.GetDestination())
        if err != nil {
            return err
        }
    }
    {
        err := writer.WriteTimeValue("estimated_funds_delivery_date", m.GetEstimatedFundsDeliveryDate())
        if err != nil {
            return err
        }
    }
    {
        err := writer.WriteUUIDValue("id", m.GetId())
        if err != nil {
            return err
        }
    }
    {
        err := writer.WriteObjectValue("metadata", m.GetMetadata())
        if err != nil {
            return err
        }
    }
    {
        err := writer.WriteObjectValue("source", m.GetSource())
        if err != nil {
            return err
        }
    }
    if m.GetSpeed() != nil {
        cast := (*m.GetSpeed()).String()
        err := writer.WriteStringValue("speed", &cast)
        if err != nil {
            return err
        }
    }
    if m.GetStatus() != nil {
        cast := (*m.GetStatus()).String()
        err := writer.WriteStringValue("status", &cast)
        if err != nil {
            return err
        }
    }
    if m.GetStatusReasons() != nil {
        cast := make([]i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.Parsable, len(m.GetStatusReasons()))
        for i, v := range m.GetStatusReasons() {
            if v != nil {
                cast[i] = v.(i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.Parsable)
            }
        }
        err := writer.WriteCollectionOfObjectValues("status_reasons", cast)
        if err != nil {
            return err
        }
    }
    {
        err := writer.WriteUUIDValue("transfer_group_id", m.GetTransferGroupId())
        if err != nil {
            return err
        }
    }
    {
        err := writer.WriteStringValue("transfer_reference_id", m.GetTransferReferenceId())
        if err != nil {
            return err
        }
    }
    {
        err := writer.WriteTimeValue("updated_at", m.GetUpdatedAt())
        if err != nil {
            return err
        }
    }
    {
        err := writer.WriteAdditionalData(m.GetAdditionalData())
        if err != nil {
            return err
        }
    }
    return nil
}
// SetAccountStatementDescriptor sets the account_statement_descriptor property value. Banks can display additional information to help the end user understand why they received funds. This information will appear on both the source and destination bank account statements. The field supports 10 alphanumeric characters for ACH and 140 for RTP.
func (m *TransferResponseBaseObject) SetAccountStatementDescriptor(value *string)() {
    m.account_statement_descriptor = value
}
// SetAdditionalData sets the AdditionalData property value. Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
func (m *TransferResponseBaseObject) SetAdditionalData(value map[string]any)() {
    m.additionalData = value
}
// SetAmount sets the amount property value. Transfer amount in integral cents (example: 100 = $1). Must be greater than zero.
func (m *TransferResponseBaseObject) SetAmount(value *int32)() {
    m.amount = value
}
// SetCreatedAt sets the created_at property value. Timestamp when the resource was created.
func (m *TransferResponseBaseObject) SetCreatedAt(value *i336074805fc853987abe6f7fe3ad97a6a6f3077a16391fec744f671a015fbd7e.Time)() {
    m.created_at = value
}
// SetCurrency sets the currency property value. Currency code in ISO 4217 format. Only USD is supported.
func (m *TransferResponseBaseObject) SetCurrency(value *TransferCurrency)() {
    m.currency = value
}
// SetDestination sets the destination property value. Information about the transfer funds destination, which will be credited.
func (m *TransferResponseBaseObject) SetDestination(value DestinationTransferPartyResponseable)() {
    m.destination = value
}
// SetEstimatedFundsDeliveryDate sets the estimated_funds_delivery_date property value. Estimated date that funds will arrive in destination account. Time will always be midnight and should be ignored.
func (m *TransferResponseBaseObject) SetEstimatedFundsDeliveryDate(value *i336074805fc853987abe6f7fe3ad97a6a6f3077a16391fec744f671a015fbd7e.Time)() {
    m.estimated_funds_delivery_date = value
}
// SetId sets the id property value. Orum generated unique id for the resource.
func (m *TransferResponseBaseObject) SetId(value *i561e97a8befe7661a44c8f54600992b4207a3a0cf6770e5559949bc276de2e22.UUID)() {
    m.id = value
}
// SetMetadata sets the metadata property value. Additional data you would like to provide on the resource. The field supports valid JSON of up to 5 key-value pairs with a maximum of 20 characters for the key and 50 characters for the value. Do not include any sensitive information.
func (m *TransferResponseBaseObject) SetMetadata(value Metadataable)() {
    m.metadata = value
}
// SetSource sets the source property value. For use cases that require a Source, information about the transfer funding source, which will be debited.
func (m *TransferResponseBaseObject) SetSource(value SourceTransferPartyResponseable)() {
    m.source = value
}
// SetSpeed sets the speed property value. Speed of transfer.
func (m *TransferResponseBaseObject) SetSpeed(value *TransferSpeed)() {
    m.speed = value
}
// SetStatus sets the status property value. Describes the current status of the transfer.
func (m *TransferResponseBaseObject) SetStatus(value *TransferStatus)() {
    m.status = value
}
// SetStatusReasons sets the status_reasons property value. Array that explains why the transfer failed.
func (m *TransferResponseBaseObject) SetStatusReasons(value []TransferStatusReasonable)() {
    m.status_reasons = value
}
// SetTransferGroupId sets the transfer_group_id property value. Orum generated unique id for the resource.
func (m *TransferResponseBaseObject) SetTransferGroupId(value *i561e97a8befe7661a44c8f54600992b4207a3a0cf6770e5559949bc276de2e22.UUID)() {
    m.transfer_group_id = value
}
// SetTransferReferenceId sets the transfer_reference_id property value. Unique reference id for the transfer. Generated by you.
func (m *TransferResponseBaseObject) SetTransferReferenceId(value *string)() {
    m.transfer_reference_id = value
}
// SetUpdatedAt sets the updated_at property value. Timestamp when the resource was last updated.
func (m *TransferResponseBaseObject) SetUpdatedAt(value *i336074805fc853987abe6f7fe3ad97a6a6f3077a16391fec744f671a015fbd7e.Time)() {
    m.updated_at = value
}
type TransferResponseBaseObjectable interface {
    i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.AdditionalDataHolder
    i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.Parsable
    GetAccountStatementDescriptor()(*string)
    GetAmount()(*int32)
    GetCreatedAt()(*i336074805fc853987abe6f7fe3ad97a6a6f3077a16391fec744f671a015fbd7e.Time)
    GetCurrency()(*TransferCurrency)
    GetDestination()(DestinationTransferPartyResponseable)
    GetEstimatedFundsDeliveryDate()(*i336074805fc853987abe6f7fe3ad97a6a6f3077a16391fec744f671a015fbd7e.Time)
    GetId()(*i561e97a8befe7661a44c8f54600992b4207a3a0cf6770e5559949bc276de2e22.UUID)
    GetMetadata()(Metadataable)
    GetSource()(SourceTransferPartyResponseable)
    GetSpeed()(*TransferSpeed)
    GetStatus()(*TransferStatus)
    GetStatusReasons()([]TransferStatusReasonable)
    GetTransferGroupId()(*i561e97a8befe7661a44c8f54600992b4207a3a0cf6770e5559949bc276de2e22.UUID)
    GetTransferReferenceId()(*string)
    GetUpdatedAt()(*i336074805fc853987abe6f7fe3ad97a6a6f3077a16391fec744f671a015fbd7e.Time)
    SetAccountStatementDescriptor(value *string)()
    SetAmount(value *int32)()
    SetCreatedAt(value *i336074805fc853987abe6f7fe3ad97a6a6f3077a16391fec744f671a015fbd7e.Time)()
    SetCurrency(value *TransferCurrency)()
    SetDestination(value DestinationTransferPartyResponseable)()
    SetEstimatedFundsDeliveryDate(value *i336074805fc853987abe6f7fe3ad97a6a6f3077a16391fec744f671a015fbd7e.Time)()
    SetId(value *i561e97a8befe7661a44c8f54600992b4207a3a0cf6770e5559949bc276de2e22.UUID)()
    SetMetadata(value Metadataable)()
    SetSource(value SourceTransferPartyResponseable)()
    SetSpeed(value *TransferSpeed)()
    SetStatus(value *TransferStatus)()
    SetStatusReasons(value []TransferStatusReasonable)()
    SetTransferGroupId(value *i561e97a8befe7661a44c8f54600992b4207a3a0cf6770e5559949bc276de2e22.UUID)()
    SetTransferReferenceId(value *string)()
    SetUpdatedAt(value *i336074805fc853987abe6f7fe3ad97a6a6f3077a16391fec744f671a015fbd7e.Time)()
}
